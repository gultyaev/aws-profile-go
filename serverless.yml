service: aws-profile-go
frameworkVersion: '3'

custom:
  collectionsTableName: 'collections-table'
  usersTableName: 'users-table'

provider:
  name: aws
  runtime: go1.x
  region: eu-west-1
  environment:
    COLLECTION_TABLE: ${self:custom.collectionsTableName}
    USERS_TABLE: ${self:custom.usersTableName}
    SALT: 0da7092f262da23f22e377d4d7db1cd7cf64bafee0c40fc9
  apiGateway:
    minimumCompressionSize: 1024
    shouldStartNameWithService: true
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - dynamodb:Query
            - dynamodb:Scan
            - dynamodb:GetItem
            - dynamodb:PutItem
            - dynamodb:UpdateItem
            - dynamodb:DeleteItem
          Resource:
            - Fn::GetAtt: [ CollectionsTable, Arn ]
            - Fn::GetAtt: [ UsersTable, Arn ]

package:
  patterns:
    - '!./**'
    - ./bin/**

plugins:
  - serverless-offline

functions:
  # Skills functions
  get-skills:
    handler: bin/get-skills
    events:
      - http:
          path: /skills
          method: get
          cors: true
  save-skills:
    handler: bin/save-skills
    events:
      - http:
          path: /skills
          method: post
          cors: true
          request:
            schemas:
              application/json: ${file(validation-schemas/save-skills.validation.json)}
  # Profile functions
  get-profile:
    handler: bin/get-profile
    events:
      - http:
          path: /profile
          method: get
          cors: true
  save-profile:
    handler: bin/save-profile
    events:
      - http:
          path: /profile
          method: post
          cors: true
          request:
            schemas:
              application/json: ${file(validation-schemas/save-profile.validation.json)}

resources:
  Resources:
    # A special table which can contain any entities that don't need to have a separate collection
    #
    # - profile
    # - get-skills
    # - languages
    # - educations
    # - projects
    CollectionsTable:
      Type: AWS::DynamoDB::Table
      Properties:
        AttributeDefinitions:
          - AttributeName: Collection
            AttributeType: S
        KeySchema:
          - AttributeName: Collection
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST
        TableName: ${self:custom.collectionsTableName}
    UsersTable:
      Type: AWS::DynamoDB::Table
      Properties:
        AttributeDefinitions:
          - AttributeName: Username
            AttributeType: S
        KeySchema:
          - AttributeName: Username
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST
        TableName: ${self:custom.usersTableName}
